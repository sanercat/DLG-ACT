Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=50.0, layer_num=32, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=50.0, layer_num=32, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=50.0, layer_num=42, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=50.0, layer_num=42, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
torch.Size([256, 256, 3, 3]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([128, 64, 3, 3])
16
torch.Size([128])
17
torch.Size([128])
18
torch.Size([128, 128, 3, 3])
19
torch.Size([128])
20
torch.Size([128])
21
torch.Size([128, 64, 1, 1])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 128, 3, 3])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([256, 128, 3, 3])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([256, 256, 3, 3])
34
torch.Size([256])
35
torch.Size([256])
36
torch.Size([256, 128, 1, 1])
37
torch.Size([256])
38
torch.Size([256])
39
torch.Size([256, 256, 3, 3])
40
torch.Size([256])
41
torch.Size([256])
42
torch.Size([256, 256, 3, 3])
43
torch.Size([256])
44
torch.Size([256])
45
torch.Size([512, 256, 3, 3])
46
torch.Size([512])
47
torch.Size([512])
48
torch.Size([512, 512, 3, 3])
49
torch.Size([512])
50
torch.Size([512])
51
torch.Size([512, 256, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([512, 512, 3, 3])
55
torch.Size([512])
56
torch.Size([512])
57
torch.Size([512, 512, 3, 3])
58
torch.Size([512])
59
torch.Size([512])
60
torch.Size([100, 512])
61
torch.Size([100])
62
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=50.0, layer_num=46, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
torch.Size([512]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([128, 64, 3, 3])
16
torch.Size([128])
17
torch.Size([128])
18
torch.Size([128, 128, 3, 3])
19
torch.Size([128])
20
torch.Size([128])
21
torch.Size([128, 64, 1, 1])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 128, 3, 3])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([256, 128, 3, 3])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([256, 256, 3, 3])
34
torch.Size([256])
35
torch.Size([256])
36
torch.Size([256, 128, 1, 1])
37
torch.Size([256])
38
torch.Size([256])
39
torch.Size([256, 256, 3, 3])
40
torch.Size([256])
41
torch.Size([256])
42
torch.Size([256, 256, 3, 3])
43
torch.Size([256])
44
torch.Size([256])
45
torch.Size([512, 256, 3, 3])
46
torch.Size([512])
47
torch.Size([512])
48
torch.Size([512, 512, 3, 3])
49
torch.Size([512])
50
torch.Size([512])
51
torch.Size([512, 256, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([512, 512, 3, 3])
55
torch.Size([512])
56
torch.Size([512])
57
torch.Size([512, 512, 3, 3])
58
torch.Size([512])
59
torch.Size([512])
60
torch.Size([100, 512])
61
torch.Size([100])
62
Finished defence with time: 0:00:23.475018
Attack - Iter-0: Rec_loss-0.3419.
Attack - Iter-1000: Rec_loss-0.0606.
Attack - Iter-2000: Rec_loss-0.0604.
Attack - Iter-3000: Rec_loss-0.0590.
Attack - Iter-4000: Rec_loss-0.0551.
Attack - Iter-5000: Rec_loss-0.0516.
Attack - Iter-6000: Rec_loss-0.0542.
Attack - Iter-7000: Rec_loss-0.0545.
Attack - Iter-8000: Rec_loss-0.0532.
Attack - Iter-9000: Rec_loss-0.0533.
Attack - Iter-9999: Rec_loss-0.0502.
PSNR 18.1525 SSIM 0.5997 LPIPS -0.0000
Monday, 28. October 2024 01:22PM
Finished computations with time: 0:02:28.034117
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=50.0, layer_num=4, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 2 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=40.0, layer_num=32, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 2 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
torch.Size([256]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([128, 64, 3, 3])
16
torch.Size([128])
17
torch.Size([128])
18
torch.Size([128, 128, 3, 3])
19
torch.Size([128])
20
torch.Size([128])
21
torch.Size([128, 64, 1, 1])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 128, 3, 3])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([256, 128, 3, 3])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([256, 256, 3, 3])
34
torch.Size([256])
35
torch.Size([256])
36
torch.Size([256, 128, 1, 1])
37
torch.Size([256])
38
torch.Size([256])
39
torch.Size([256, 256, 3, 3])
40
torch.Size([256])
41
torch.Size([256])
42
torch.Size([256, 256, 3, 3])
43
torch.Size([256])
44
torch.Size([256])
45
torch.Size([512, 256, 3, 3])
46
torch.Size([512])
47
torch.Size([512])
48
torch.Size([512, 512, 3, 3])
49
torch.Size([512])
50
torch.Size([512])
51
torch.Size([512, 256, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([512, 512, 3, 3])
55
torch.Size([512])
56
torch.Size([512])
57
torch.Size([512, 512, 3, 3])
58
torch.Size([512])
59
torch.Size([512])
60
torch.Size([100, 512])
61
torch.Size([100])
62
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=40.0, layer_num=35, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 2 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
torch.Size([256]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([128, 64, 3, 3])
16
torch.Size([128])
17
torch.Size([128])
18
torch.Size([128, 128, 3, 3])
19
torch.Size([128])
20
torch.Size([128])
21
torch.Size([128, 64, 1, 1])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 128, 3, 3])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([256, 128, 3, 3])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([256, 256, 3, 3])
34
torch.Size([256])
35
torch.Size([256])
36
torch.Size([256, 128, 1, 1])
37
torch.Size([256])
38
torch.Size([256])
39
torch.Size([256, 256, 3, 3])
40
torch.Size([256])
41
torch.Size([256])
42
torch.Size([256, 256, 3, 3])
43
torch.Size([256])
44
torch.Size([256])
45
torch.Size([512, 256, 3, 3])
46
torch.Size([512])
47
torch.Size([512])
48
torch.Size([512, 512, 3, 3])
49
torch.Size([512])
50
torch.Size([512])
51
torch.Size([512, 256, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([512, 512, 3, 3])
55
torch.Size([512])
56
torch.Size([512])
57
torch.Size([512, 512, 3, 3])
58
torch.Size([512])
59
torch.Size([512])
60
torch.Size([100, 512])
61
torch.Size([100])
62
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=40.0, layer_num=32, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 2 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
torch.Size([256]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([128, 64, 3, 3])
16
torch.Size([128])
17
torch.Size([128])
18
torch.Size([128, 128, 3, 3])
19
torch.Size([128])
20
torch.Size([128])
21
torch.Size([128, 64, 1, 1])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 128, 3, 3])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([256, 128, 3, 3])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([256, 256, 3, 3])
34
torch.Size([256])
35
torch.Size([256])
36
torch.Size([256, 128, 1, 1])
37
torch.Size([256])
38
torch.Size([256])
39
torch.Size([256, 256, 3, 3])
40
torch.Size([256])
41
torch.Size([256])
42
torch.Size([256, 256, 3, 3])
43
torch.Size([256])
44
torch.Size([256])
45
torch.Size([512, 256, 3, 3])
46
torch.Size([512])
47
torch.Size([512])
48
torch.Size([512, 512, 3, 3])
49
torch.Size([512])
50
torch.Size([512])
51
torch.Size([512, 256, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([512, 512, 3, 3])
55
torch.Size([512])
56
torch.Size([512])
57
torch.Size([512, 512, 3, 3])
58
torch.Size([512])
59
torch.Size([512])
60
torch.Size([100, 512])
61
torch.Size([100])
62
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=40.0, layer_num=50, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 2 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
torch.Size([512]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([128, 64, 3, 3])
16
torch.Size([128])
17
torch.Size([128])
18
torch.Size([128, 128, 3, 3])
19
torch.Size([128])
20
torch.Size([128])
21
torch.Size([128, 64, 1, 1])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 128, 3, 3])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([256, 128, 3, 3])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([256, 256, 3, 3])
34
torch.Size([256])
35
torch.Size([256])
36
torch.Size([256, 128, 1, 1])
37
torch.Size([256])
38
torch.Size([256])
39
torch.Size([256, 256, 3, 3])
40
torch.Size([256])
41
torch.Size([256])
42
torch.Size([256, 256, 3, 3])
43
torch.Size([256])
44
torch.Size([256])
45
torch.Size([512, 256, 3, 3])
46
torch.Size([512])
47
torch.Size([512])
48
torch.Size([512, 512, 3, 3])
49
torch.Size([512])
50
torch.Size([512])
51
torch.Size([512, 256, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([512, 512, 3, 3])
55
torch.Size([512])
56
torch.Size([512])
57
torch.Size([512, 512, 3, 3])
58
torch.Size([512])
59
torch.Size([512])
60
torch.Size([100, 512])
61
torch.Size([100])
62
Finished defence with time: 0:00:23.557240
Attack - Iter-0: Rec_loss-0.3419.
Attack - Iter-1000: Rec_loss-0.0651.
Attack - Iter-2000: Rec_loss-0.0597.
Attack - Iter-3000: Rec_loss-0.0583.
Attack - Iter-4000: Rec_loss-0.0549.
Attack - Iter-5000: Rec_loss-0.0543.
Attack - Iter-6000: Rec_loss-0.0527.
Attack - Iter-7000: Rec_loss-0.0454.
Attack - Iter-8000: Rec_loss-0.0531.
Attack - Iter-9000: Rec_loss-0.0496.
Attack - Iter-9999: Rec_loss-0.0500.
PSNR 19.6323 SSIM 0.6553 LPIPS -0.0000
Monday, 28. October 2024 01:32PM
Finished computations with time: 0:02:28.139627
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=50.0, layer_num=50, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 2 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
torch.Size([512]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([128, 64, 3, 3])
16
torch.Size([128])
17
torch.Size([128])
18
torch.Size([128, 128, 3, 3])
19
torch.Size([128])
20
torch.Size([128])
21
torch.Size([128, 64, 1, 1])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 128, 3, 3])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([256, 128, 3, 3])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([256, 256, 3, 3])
34
torch.Size([256])
35
torch.Size([256])
36
torch.Size([256, 128, 1, 1])
37
torch.Size([256])
38
torch.Size([256])
39
torch.Size([256, 256, 3, 3])
40
torch.Size([256])
41
torch.Size([256])
42
torch.Size([256, 256, 3, 3])
43
torch.Size([256])
44
torch.Size([256])
45
torch.Size([512, 256, 3, 3])
46
torch.Size([512])
47
torch.Size([512])
48
torch.Size([512, 512, 3, 3])
49
torch.Size([512])
50
torch.Size([512])
51
torch.Size([512, 256, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([512, 512, 3, 3])
55
torch.Size([512])
56
torch.Size([512])
57
torch.Size([512, 512, 3, 3])
58
torch.Size([512])
59
torch.Size([512])
60
torch.Size([100, 512])
61
torch.Size([100])
62
Finished defence with time: 0:00:23.801367
Attack - Iter-0: Rec_loss-0.3419.
Attack - Iter-1000: Rec_loss-0.0625.
Attack - Iter-2000: Rec_loss-0.0561.
Attack - Iter-3000: Rec_loss-0.0567.
Attack - Iter-4000: Rec_loss-0.0516.
Attack - Iter-5000: Rec_loss-0.0495.
Attack - Iter-6000: Rec_loss-0.0517.
Attack - Iter-7000: Rec_loss-0.0500.
Attack - Iter-8000: Rec_loss-0.0518.
Attack - Iter-9000: Rec_loss-0.0602.
Attack - Iter-9999: Rec_loss-0.0604.
PSNR 18.3949 SSIM 0.6069 LPIPS -0.0000
Monday, 28. October 2024 01:35PM
Finished computations with time: 0:02:28.205560
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=80.0, layer_num=50, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 2 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
torch.Size([512]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([128, 64, 3, 3])
16
torch.Size([128])
17
torch.Size([128])
18
torch.Size([128, 128, 3, 3])
19
torch.Size([128])
20
torch.Size([128])
21
torch.Size([128, 64, 1, 1])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 128, 3, 3])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([256, 128, 3, 3])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([256, 256, 3, 3])
34
torch.Size([256])
35
torch.Size([256])
36
torch.Size([256, 128, 1, 1])
37
torch.Size([256])
38
torch.Size([256])
39
torch.Size([256, 256, 3, 3])
40
torch.Size([256])
41
torch.Size([256])
42
torch.Size([256, 256, 3, 3])
43
torch.Size([256])
44
torch.Size([256])
45
torch.Size([512, 256, 3, 3])
46
torch.Size([512])
47
torch.Size([512])
48
torch.Size([512, 512, 3, 3])
49
torch.Size([512])
50
torch.Size([512])
51
torch.Size([512, 256, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([512, 512, 3, 3])
55
torch.Size([512])
56
torch.Size([512])
57
torch.Size([512, 512, 3, 3])
58
torch.Size([512])
59
torch.Size([512])
60
torch.Size([100, 512])
61
torch.Size([100])
62
Finished defence with time: 0:00:23.465665
Attack - Iter-0: Rec_loss-0.3420.
Attack - Iter-1000: Rec_loss-0.0579.
Attack - Iter-2000: Rec_loss-0.0524.
Attack - Iter-3000: Rec_loss-0.0528.
Attack - Iter-4000: Rec_loss-0.0440.
Attack - Iter-5000: Rec_loss-0.0500.
Attack - Iter-6000: Rec_loss-0.0530.
Attack - Iter-7000: Rec_loss-0.0482.
Attack - Iter-8000: Rec_loss-0.0535.
Attack - Iter-9000: Rec_loss-0.0517.
Attack - Iter-9999: Rec_loss-0.0514.
PSNR 18.4002 SSIM 0.5990 LPIPS -0.0000
Monday, 28. October 2024 01:37PM
Finished computations with time: 0:02:27.253248
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=30.0, layer_num=50, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 2 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
torch.Size([512]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([128, 64, 3, 3])
16
torch.Size([128])
17
torch.Size([128])
18
torch.Size([128, 128, 3, 3])
19
torch.Size([128])
20
torch.Size([128])
21
torch.Size([128, 64, 1, 1])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 128, 3, 3])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([256, 128, 3, 3])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([256, 256, 3, 3])
34
torch.Size([256])
35
torch.Size([256])
36
torch.Size([256, 128, 1, 1])
37
torch.Size([256])
38
torch.Size([256])
39
torch.Size([256, 256, 3, 3])
40
torch.Size([256])
41
torch.Size([256])
42
torch.Size([256, 256, 3, 3])
43
torch.Size([256])
44
torch.Size([256])
45
torch.Size([512, 256, 3, 3])
46
torch.Size([512])
47
torch.Size([512])
48
torch.Size([512, 512, 3, 3])
49
torch.Size([512])
50
torch.Size([512])
51
torch.Size([512, 256, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([512, 512, 3, 3])
55
torch.Size([512])
56
torch.Size([512])
57
torch.Size([512, 512, 3, 3])
58
torch.Size([512])
59
torch.Size([512])
60
torch.Size([100, 512])
61
torch.Size([100])
62
Finished defence with time: 0:00:23.526069
Attack - Iter-0: Rec_loss-0.3419.
Attack - Iter-1000: Rec_loss-0.0565.
Attack - Iter-2000: Rec_loss-0.0488.
Attack - Iter-3000: Rec_loss-0.0631.
Attack - Iter-4000: Rec_loss-0.0535.
Attack - Iter-5000: Rec_loss-0.0551.
Attack - Iter-6000: Rec_loss-0.0564.
Attack - Iter-7000: Rec_loss-0.0517.
Attack - Iter-8000: Rec_loss-0.0512.
Attack - Iter-9000: Rec_loss-0.0483.
Attack - Iter-9999: Rec_loss-0.0496.
PSNR 18.2631 SSIM 0.6208 LPIPS -0.0000
Monday, 28. October 2024 01:42PM
Finished computations with time: 0:02:27.482028
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=300, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=30.0, layer_num=60, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([68])
Proxy_labels: tensor([46])
Initial with cifar100
torch.Size([100, 512]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([128, 64, 3, 3])
16
torch.Size([128])
17
torch.Size([128])
18
torch.Size([128, 128, 3, 3])
19
torch.Size([128])
20
torch.Size([128])
21
torch.Size([128, 64, 1, 1])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 128, 3, 3])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([256, 128, 3, 3])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([256, 256, 3, 3])
34
torch.Size([256])
35
torch.Size([256])
36
torch.Size([256, 128, 1, 1])
37
torch.Size([256])
38
torch.Size([256])
39
torch.Size([256, 256, 3, 3])
40
torch.Size([256])
41
torch.Size([256])
42
torch.Size([256, 256, 3, 3])
43
torch.Size([256])
44
torch.Size([256])
45
torch.Size([512, 256, 3, 3])
46
torch.Size([512])
47
torch.Size([512])
48
torch.Size([512, 512, 3, 3])
49
torch.Size([512])
50
torch.Size([512])
51
torch.Size([512, 256, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([512, 512, 3, 3])
55
torch.Size([512])
56
torch.Size([512])
57
torch.Size([512, 512, 3, 3])
58
torch.Size([512])
59
torch.Size([512])
60
torch.Size([100, 512])
61
torch.Size([100])
62
Finished defence with time: 0:00:23.391355
Attack - Iter-0: Rec_loss-0.3574.
Attack - Iter-10: Rec_loss-0.2170.
Attack - Iter-20: Rec_loss-0.1807.
Attack - Iter-30: Rec_loss-0.1764.
Attack - Iter-40: Rec_loss-0.1760.
Attack - Iter-50: Rec_loss-0.1702.
Attack - Iter-60: Rec_loss-0.1561.
Attack - Iter-70: Rec_loss-0.1466.
Attack - Iter-80: Rec_loss-0.1494.
Attack - Iter-90: Rec_loss-0.1324.
Attack - Iter-100: Rec_loss-0.1320.
Attack - Iter-110: Rec_loss-0.1273.
Attack - Iter-120: Rec_loss-0.1249.
Attack - Iter-130: Rec_loss-0.1251.
Attack - Iter-140: Rec_loss-0.1263.
Attack - Iter-150: Rec_loss-0.1240.
Attack - Iter-160: Rec_loss-0.1225.
Attack - Iter-170: Rec_loss-0.1236.
Attack - Iter-180: Rec_loss-0.1226.
Attack - Iter-190: Rec_loss-0.1203.
Attack - Iter-200: Rec_loss-0.1189.
Attack - Iter-210: Rec_loss-0.1170.
Attack - Iter-220: Rec_loss-0.1154.
Attack - Iter-230: Rec_loss-0.1162.
Attack - Iter-240: Rec_loss-0.1204.
Attack - Iter-250: Rec_loss-0.1209.
Attack - Iter-260: Rec_loss-0.1180.
Attack - Iter-270: Rec_loss-0.1179.
Attack - Iter-280: Rec_loss-0.1180.
Attack - Iter-290: Rec_loss-0.1183.
Attack - Iter-299: Rec_loss-0.1152.
PSNR 14.3748 SSIM 0.4148 LPIPS -0.0000
Monday, 28. October 2024 03:54PM
Finished computations with time: 0:00:27.351787
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=30.0, layer_num=32, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([7])
Proxy_labels: tensor([35])
Initial with cifar100
torch.Size([256]) torch.Size([2048])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 1, 1])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([256, 64, 1, 1])
10
torch.Size([256])
11
torch.Size([256])
12
torch.Size([256, 64, 1, 1])
13
torch.Size([256])
14
torch.Size([256])
15
torch.Size([64, 256, 1, 1])
16
torch.Size([64])
17
torch.Size([64])
18
torch.Size([64, 64, 3, 3])
19
torch.Size([64])
20
torch.Size([64])
21
torch.Size([256, 64, 1, 1])
22
torch.Size([256])
23
torch.Size([256])
24
torch.Size([64, 256, 1, 1])
25
torch.Size([64])
26
torch.Size([64])
27
torch.Size([64, 64, 3, 3])
28
torch.Size([64])
29
torch.Size([64])
30
torch.Size([256, 64, 1, 1])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([128, 256, 1, 1])
34
torch.Size([128])
35
torch.Size([128])
36
torch.Size([128, 128, 3, 3])
37
torch.Size([128])
38
torch.Size([128])
39
torch.Size([512, 128, 1, 1])
40
torch.Size([512])
41
torch.Size([512])
42
torch.Size([512, 256, 1, 1])
43
torch.Size([512])
44
torch.Size([512])
45
torch.Size([128, 512, 1, 1])
46
torch.Size([128])
47
torch.Size([128])
48
torch.Size([128, 128, 3, 3])
49
torch.Size([128])
50
torch.Size([128])
51
torch.Size([512, 128, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([128, 512, 1, 1])
55
torch.Size([128])
56
torch.Size([128])
57
torch.Size([128, 128, 3, 3])
58
torch.Size([128])
59
torch.Size([128])
60
torch.Size([512, 128, 1, 1])
61
torch.Size([512])
62
torch.Size([512])
63
torch.Size([128, 512, 1, 1])
64
torch.Size([128])
65
torch.Size([128])
66
torch.Size([128, 128, 3, 3])
67
torch.Size([128])
68
torch.Size([128])
69
torch.Size([512, 128, 1, 1])
70
torch.Size([512])
71
torch.Size([512])
72
torch.Size([128, 512, 1, 1])
73
torch.Size([128])
74
torch.Size([128])
75
torch.Size([128, 128, 3, 3])
76
torch.Size([128])
77
torch.Size([128])
78
torch.Size([512, 128, 1, 1])
79
torch.Size([512])
80
torch.Size([512])
81
torch.Size([128, 512, 1, 1])
82
torch.Size([128])
83
torch.Size([128])
84
torch.Size([128, 128, 3, 3])
85
torch.Size([128])
86
torch.Size([128])
87
torch.Size([512, 128, 1, 1])
88
torch.Size([512])
89
torch.Size([512])
90
torch.Size([128, 512, 1, 1])
91
torch.Size([128])
92
torch.Size([128])
93
torch.Size([128, 128, 3, 3])
94
torch.Size([128])
95
torch.Size([128])
96
torch.Size([512, 128, 1, 1])
97
torch.Size([512])
98
torch.Size([512])
99
torch.Size([128, 512, 1, 1])
100
torch.Size([128])
101
torch.Size([128])
102
torch.Size([128, 128, 3, 3])
103
torch.Size([128])
104
torch.Size([128])
105
torch.Size([512, 128, 1, 1])
106
torch.Size([512])
107
torch.Size([512])
108
torch.Size([256, 512, 1, 1])
109
torch.Size([256])
110
torch.Size([256])
111
torch.Size([256, 256, 3, 3])
112
torch.Size([256])
113
torch.Size([256])
114
torch.Size([1024, 256, 1, 1])
115
torch.Size([1024])
116
torch.Size([1024])
117
torch.Size([1024, 512, 1, 1])
118
torch.Size([1024])
119
torch.Size([1024])
120
torch.Size([256, 1024, 1, 1])
121
torch.Size([256])
122
torch.Size([256])
123
torch.Size([256, 256, 3, 3])
124
torch.Size([256])
125
torch.Size([256])
126
torch.Size([1024, 256, 1, 1])
127
torch.Size([1024])
128
torch.Size([1024])
129
torch.Size([256, 1024, 1, 1])
130
torch.Size([256])
131
torch.Size([256])
132
torch.Size([256, 256, 3, 3])
133
torch.Size([256])
134
torch.Size([256])
135
torch.Size([1024, 256, 1, 1])
136
torch.Size([1024])
137
torch.Size([1024])
138
torch.Size([256, 1024, 1, 1])
139
torch.Size([256])
140
torch.Size([256])
141
torch.Size([256, 256, 3, 3])
142
torch.Size([256])
143
torch.Size([256])
144
torch.Size([1024, 256, 1, 1])
145
torch.Size([1024])
146
torch.Size([1024])
147
torch.Size([256, 1024, 1, 1])
148
torch.Size([256])
149
torch.Size([256])
150
torch.Size([256, 256, 3, 3])
151
torch.Size([256])
152
torch.Size([256])
153
torch.Size([1024, 256, 1, 1])
154
torch.Size([1024])
155
torch.Size([1024])
156
torch.Size([256, 1024, 1, 1])
157
torch.Size([256])
158
torch.Size([256])
159
torch.Size([256, 256, 3, 3])
160
torch.Size([256])
161
torch.Size([256])
162
torch.Size([1024, 256, 1, 1])
163
torch.Size([1024])
164
torch.Size([1024])
165
torch.Size([256, 1024, 1, 1])
166
torch.Size([256])
167
torch.Size([256])
168
torch.Size([256, 256, 3, 3])
169
torch.Size([256])
170
torch.Size([256])
171
torch.Size([1024, 256, 1, 1])
172
torch.Size([1024])
173
torch.Size([1024])
174
torch.Size([256, 1024, 1, 1])
175
torch.Size([256])
176
torch.Size([256])
177
torch.Size([256, 256, 3, 3])
178
torch.Size([256])
179
torch.Size([256])
180
torch.Size([1024, 256, 1, 1])
181
torch.Size([1024])
182
torch.Size([1024])
183
torch.Size([256, 1024, 1, 1])
184
torch.Size([256])
185
torch.Size([256])
186
torch.Size([256, 256, 3, 3])
187
torch.Size([256])
188
torch.Size([256])
189
torch.Size([1024, 256, 1, 1])
190
torch.Size([1024])
191
torch.Size([1024])
192
torch.Size([256, 1024, 1, 1])
193
torch.Size([256])
194
torch.Size([256])
195
torch.Size([256, 256, 3, 3])
196
torch.Size([256])
197
torch.Size([256])
198
torch.Size([1024, 256, 1, 1])
199
torch.Size([1024])
200
torch.Size([1024])
201
torch.Size([256, 1024, 1, 1])
202
torch.Size([256])
203
torch.Size([256])
204
torch.Size([256, 256, 3, 3])
205
torch.Size([256])
206
torch.Size([256])
207
torch.Size([1024, 256, 1, 1])
208
torch.Size([1024])
209
torch.Size([1024])
210
torch.Size([256, 1024, 1, 1])
211
torch.Size([256])
212
torch.Size([256])
213
torch.Size([256, 256, 3, 3])
214
torch.Size([256])
215
torch.Size([256])
216
torch.Size([1024, 256, 1, 1])
217
torch.Size([1024])
218
torch.Size([1024])
219
torch.Size([256, 1024, 1, 1])
220
torch.Size([256])
221
torch.Size([256])
222
torch.Size([256, 256, 3, 3])
223
torch.Size([256])
224
torch.Size([256])
225
torch.Size([1024, 256, 1, 1])
226
torch.Size([1024])
227
torch.Size([1024])
228
torch.Size([256, 1024, 1, 1])
229
torch.Size([256])
230
torch.Size([256])
231
torch.Size([256, 256, 3, 3])
232
torch.Size([256])
233
torch.Size([256])
234
torch.Size([1024, 256, 1, 1])
235
torch.Size([1024])
236
torch.Size([1024])
237
torch.Size([256, 1024, 1, 1])
238
torch.Size([256])
239
torch.Size([256])
240
torch.Size([256, 256, 3, 3])
241
torch.Size([256])
242
torch.Size([256])
243
torch.Size([1024, 256, 1, 1])
244
torch.Size([1024])
245
torch.Size([1024])
246
torch.Size([256, 1024, 1, 1])
247
torch.Size([256])
248
torch.Size([256])
249
torch.Size([256, 256, 3, 3])
250
torch.Size([256])
251
torch.Size([256])
252
torch.Size([1024, 256, 1, 1])
253
torch.Size([1024])
254
torch.Size([1024])
255
torch.Size([256, 1024, 1, 1])
256
torch.Size([256])
257
torch.Size([256])
258
torch.Size([256, 256, 3, 3])
259
torch.Size([256])
260
torch.Size([256])
261
torch.Size([1024, 256, 1, 1])
262
torch.Size([1024])
263
torch.Size([1024])
264
torch.Size([256, 1024, 1, 1])
265
torch.Size([256])
266
torch.Size([256])
267
torch.Size([256, 256, 3, 3])
268
torch.Size([256])
269
torch.Size([256])
270
torch.Size([1024, 256, 1, 1])
271
torch.Size([1024])
272
torch.Size([1024])
273
torch.Size([256, 1024, 1, 1])
274
torch.Size([256])
275
torch.Size([256])
276
torch.Size([256, 256, 3, 3])
277
torch.Size([256])
278
torch.Size([256])
279
torch.Size([1024, 256, 1, 1])
280
torch.Size([1024])
281
torch.Size([1024])
282
torch.Size([256, 1024, 1, 1])
283
torch.Size([256])
284
torch.Size([256])
285
torch.Size([256, 256, 3, 3])
286
torch.Size([256])
287
torch.Size([256])
288
torch.Size([1024, 256, 1, 1])
289
torch.Size([1024])
290
torch.Size([1024])
291
torch.Size([256, 1024, 1, 1])
292
torch.Size([256])
293
torch.Size([256])
294
torch.Size([256, 256, 3, 3])
295
torch.Size([256])
296
torch.Size([256])
297
torch.Size([1024, 256, 1, 1])
298
torch.Size([1024])
299
torch.Size([1024])
300
torch.Size([256, 1024, 1, 1])
301
torch.Size([256])
302
torch.Size([256])
303
torch.Size([256, 256, 3, 3])
304
torch.Size([256])
305
torch.Size([256])
306
torch.Size([1024, 256, 1, 1])
307
torch.Size([1024])
308
torch.Size([1024])
309
torch.Size([256, 1024, 1, 1])
310
torch.Size([256])
311
torch.Size([256])
312
torch.Size([256, 256, 3, 3])
313
torch.Size([256])
314
torch.Size([256])
315
torch.Size([1024, 256, 1, 1])
316
torch.Size([1024])
317
torch.Size([1024])
318
torch.Size([256, 1024, 1, 1])
319
torch.Size([256])
320
torch.Size([256])
321
torch.Size([256, 256, 3, 3])
322
torch.Size([256])
323
torch.Size([256])
324
torch.Size([1024, 256, 1, 1])
325
torch.Size([1024])
326
torch.Size([1024])
327
torch.Size([256, 1024, 1, 1])
328
torch.Size([256])
329
torch.Size([256])
330
torch.Size([256, 256, 3, 3])
331
torch.Size([256])
332
torch.Size([256])
333
torch.Size([1024, 256, 1, 1])
334
torch.Size([1024])
335
torch.Size([1024])
336
torch.Size([256, 1024, 1, 1])
337
torch.Size([256])
338
torch.Size([256])
339
torch.Size([256, 256, 3, 3])
340
torch.Size([256])
341
torch.Size([256])
342
torch.Size([1024, 256, 1, 1])
343
torch.Size([1024])
344
torch.Size([1024])
345
torch.Size([256, 1024, 1, 1])
346
torch.Size([256])
347
torch.Size([256])
348
torch.Size([256, 256, 3, 3])
349
torch.Size([256])
350
torch.Size([256])
351
torch.Size([1024, 256, 1, 1])
352
torch.Size([1024])
353
torch.Size([1024])
354
torch.Size([256, 1024, 1, 1])
355
torch.Size([256])
356
torch.Size([256])
357
torch.Size([256, 256, 3, 3])
358
torch.Size([256])
359
torch.Size([256])
360
torch.Size([1024, 256, 1, 1])
361
torch.Size([1024])
362
torch.Size([1024])
363
torch.Size([256, 1024, 1, 1])
364
torch.Size([256])
365
torch.Size([256])
366
torch.Size([256, 256, 3, 3])
367
torch.Size([256])
368
torch.Size([256])
369
torch.Size([1024, 256, 1, 1])
370
torch.Size([1024])
371
torch.Size([1024])
372
torch.Size([256, 1024, 1, 1])
373
torch.Size([256])
374
torch.Size([256])
375
torch.Size([256, 256, 3, 3])
376
torch.Size([256])
377
torch.Size([256])
378
torch.Size([1024, 256, 1, 1])
379
torch.Size([1024])
380
torch.Size([1024])
381
torch.Size([256, 1024, 1, 1])
382
torch.Size([256])
383
torch.Size([256])
384
torch.Size([256, 256, 3, 3])
385
torch.Size([256])
386
torch.Size([256])
387
torch.Size([1024, 256, 1, 1])
388
torch.Size([1024])
389
torch.Size([1024])
390
torch.Size([256, 1024, 1, 1])
391
torch.Size([256])
392
torch.Size([256])
393
torch.Size([256, 256, 3, 3])
394
torch.Size([256])
395
torch.Size([256])
396
torch.Size([1024, 256, 1, 1])
397
torch.Size([1024])
398
torch.Size([1024])
399
torch.Size([256, 1024, 1, 1])
400
torch.Size([256])
401
torch.Size([256])
402
torch.Size([256, 256, 3, 3])
403
torch.Size([256])
404
torch.Size([256])
405
torch.Size([1024, 256, 1, 1])
406
torch.Size([1024])
407
torch.Size([1024])
408
torch.Size([256, 1024, 1, 1])
409
torch.Size([256])
410
torch.Size([256])
411
torch.Size([256, 256, 3, 3])
412
torch.Size([256])
413
torch.Size([256])
414
torch.Size([1024, 256, 1, 1])
415
torch.Size([1024])
416
torch.Size([1024])
417
torch.Size([256, 1024, 1, 1])
418
torch.Size([256])
419
torch.Size([256])
420
torch.Size([256, 256, 3, 3])
421
torch.Size([256])
422
torch.Size([256])
423
torch.Size([1024, 256, 1, 1])
424
torch.Size([1024])
425
torch.Size([1024])
426
torch.Size([256, 1024, 1, 1])
427
torch.Size([256])
428
torch.Size([256])
429
torch.Size([256, 256, 3, 3])
430
torch.Size([256])
431
torch.Size([256])
432
torch.Size([1024, 256, 1, 1])
433
torch.Size([1024])
434
torch.Size([1024])
435
torch.Size([512, 1024, 1, 1])
436
torch.Size([512])
437
torch.Size([512])
438
torch.Size([512, 512, 3, 3])
439
torch.Size([512])
440
torch.Size([512])
441
torch.Size([2048, 512, 1, 1])
442
torch.Size([2048])
443
torch.Size([2048])
444
torch.Size([2048, 1024, 1, 1])
445
torch.Size([2048])
446
torch.Size([2048])
447
torch.Size([512, 2048, 1, 1])
448
torch.Size([512])
449
torch.Size([512])
450
torch.Size([512, 512, 3, 3])
451
torch.Size([512])
452
torch.Size([512])
453
torch.Size([2048, 512, 1, 1])
454
torch.Size([2048])
455
torch.Size([2048])
456
torch.Size([512, 2048, 1, 1])
457
torch.Size([512])
458
torch.Size([512])
459
torch.Size([512, 512, 3, 3])
460
torch.Size([512])
461
torch.Size([512])
462
torch.Size([2048, 512, 1, 1])
463
torch.Size([2048])
464
torch.Size([2048])
465
torch.Size([100, 2048])
466
torch.Size([100])
467
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=30.0, layer_num=465, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([7])
Proxy_labels: tensor([35])
Initial with cifar100
torch.Size([100, 2048]) torch.Size([2048])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 1, 1])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([256, 64, 1, 1])
10
torch.Size([256])
11
torch.Size([256])
12
torch.Size([256, 64, 1, 1])
13
torch.Size([256])
14
torch.Size([256])
15
torch.Size([64, 256, 1, 1])
16
torch.Size([64])
17
torch.Size([64])
18
torch.Size([64, 64, 3, 3])
19
torch.Size([64])
20
torch.Size([64])
21
torch.Size([256, 64, 1, 1])
22
torch.Size([256])
23
torch.Size([256])
24
torch.Size([64, 256, 1, 1])
25
torch.Size([64])
26
torch.Size([64])
27
torch.Size([64, 64, 3, 3])
28
torch.Size([64])
29
torch.Size([64])
30
torch.Size([256, 64, 1, 1])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([128, 256, 1, 1])
34
torch.Size([128])
35
torch.Size([128])
36
torch.Size([128, 128, 3, 3])
37
torch.Size([128])
38
torch.Size([128])
39
torch.Size([512, 128, 1, 1])
40
torch.Size([512])
41
torch.Size([512])
42
torch.Size([512, 256, 1, 1])
43
torch.Size([512])
44
torch.Size([512])
45
torch.Size([128, 512, 1, 1])
46
torch.Size([128])
47
torch.Size([128])
48
torch.Size([128, 128, 3, 3])
49
torch.Size([128])
50
torch.Size([128])
51
torch.Size([512, 128, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([128, 512, 1, 1])
55
torch.Size([128])
56
torch.Size([128])
57
torch.Size([128, 128, 3, 3])
58
torch.Size([128])
59
torch.Size([128])
60
torch.Size([512, 128, 1, 1])
61
torch.Size([512])
62
torch.Size([512])
63
torch.Size([128, 512, 1, 1])
64
torch.Size([128])
65
torch.Size([128])
66
torch.Size([128, 128, 3, 3])
67
torch.Size([128])
68
torch.Size([128])
69
torch.Size([512, 128, 1, 1])
70
torch.Size([512])
71
torch.Size([512])
72
torch.Size([128, 512, 1, 1])
73
torch.Size([128])
74
torch.Size([128])
75
torch.Size([128, 128, 3, 3])
76
torch.Size([128])
77
torch.Size([128])
78
torch.Size([512, 128, 1, 1])
79
torch.Size([512])
80
torch.Size([512])
81
torch.Size([128, 512, 1, 1])
82
torch.Size([128])
83
torch.Size([128])
84
torch.Size([128, 128, 3, 3])
85
torch.Size([128])
86
torch.Size([128])
87
torch.Size([512, 128, 1, 1])
88
torch.Size([512])
89
torch.Size([512])
90
torch.Size([128, 512, 1, 1])
91
torch.Size([128])
92
torch.Size([128])
93
torch.Size([128, 128, 3, 3])
94
torch.Size([128])
95
torch.Size([128])
96
torch.Size([512, 128, 1, 1])
97
torch.Size([512])
98
torch.Size([512])
99
torch.Size([128, 512, 1, 1])
100
torch.Size([128])
101
torch.Size([128])
102
torch.Size([128, 128, 3, 3])
103
torch.Size([128])
104
torch.Size([128])
105
torch.Size([512, 128, 1, 1])
106
torch.Size([512])
107
torch.Size([512])
108
torch.Size([256, 512, 1, 1])
109
torch.Size([256])
110
torch.Size([256])
111
torch.Size([256, 256, 3, 3])
112
torch.Size([256])
113
torch.Size([256])
114
torch.Size([1024, 256, 1, 1])
115
torch.Size([1024])
116
torch.Size([1024])
117
torch.Size([1024, 512, 1, 1])
118
torch.Size([1024])
119
torch.Size([1024])
120
torch.Size([256, 1024, 1, 1])
121
torch.Size([256])
122
torch.Size([256])
123
torch.Size([256, 256, 3, 3])
124
torch.Size([256])
125
torch.Size([256])
126
torch.Size([1024, 256, 1, 1])
127
torch.Size([1024])
128
torch.Size([1024])
129
torch.Size([256, 1024, 1, 1])
130
torch.Size([256])
131
torch.Size([256])
132
torch.Size([256, 256, 3, 3])
133
torch.Size([256])
134
torch.Size([256])
135
torch.Size([1024, 256, 1, 1])
136
torch.Size([1024])
137
torch.Size([1024])
138
torch.Size([256, 1024, 1, 1])
139
torch.Size([256])
140
torch.Size([256])
141
torch.Size([256, 256, 3, 3])
142
torch.Size([256])
143
torch.Size([256])
144
torch.Size([1024, 256, 1, 1])
145
torch.Size([1024])
146
torch.Size([1024])
147
torch.Size([256, 1024, 1, 1])
148
torch.Size([256])
149
torch.Size([256])
150
torch.Size([256, 256, 3, 3])
151
torch.Size([256])
152
torch.Size([256])
153
torch.Size([1024, 256, 1, 1])
154
torch.Size([1024])
155
torch.Size([1024])
156
torch.Size([256, 1024, 1, 1])
157
torch.Size([256])
158
torch.Size([256])
159
torch.Size([256, 256, 3, 3])
160
torch.Size([256])
161
torch.Size([256])
162
torch.Size([1024, 256, 1, 1])
163
torch.Size([1024])
164
torch.Size([1024])
165
torch.Size([256, 1024, 1, 1])
166
torch.Size([256])
167
torch.Size([256])
168
torch.Size([256, 256, 3, 3])
169
torch.Size([256])
170
torch.Size([256])
171
torch.Size([1024, 256, 1, 1])
172
torch.Size([1024])
173
torch.Size([1024])
174
torch.Size([256, 1024, 1, 1])
175
torch.Size([256])
176
torch.Size([256])
177
torch.Size([256, 256, 3, 3])
178
torch.Size([256])
179
torch.Size([256])
180
torch.Size([1024, 256, 1, 1])
181
torch.Size([1024])
182
torch.Size([1024])
183
torch.Size([256, 1024, 1, 1])
184
torch.Size([256])
185
torch.Size([256])
186
torch.Size([256, 256, 3, 3])
187
torch.Size([256])
188
torch.Size([256])
189
torch.Size([1024, 256, 1, 1])
190
torch.Size([1024])
191
torch.Size([1024])
192
torch.Size([256, 1024, 1, 1])
193
torch.Size([256])
194
torch.Size([256])
195
torch.Size([256, 256, 3, 3])
196
torch.Size([256])
197
torch.Size([256])
198
torch.Size([1024, 256, 1, 1])
199
torch.Size([1024])
200
torch.Size([1024])
201
torch.Size([256, 1024, 1, 1])
202
torch.Size([256])
203
torch.Size([256])
204
torch.Size([256, 256, 3, 3])
205
torch.Size([256])
206
torch.Size([256])
207
torch.Size([1024, 256, 1, 1])
208
torch.Size([1024])
209
torch.Size([1024])
210
torch.Size([256, 1024, 1, 1])
211
torch.Size([256])
212
torch.Size([256])
213
torch.Size([256, 256, 3, 3])
214
torch.Size([256])
215
torch.Size([256])
216
torch.Size([1024, 256, 1, 1])
217
torch.Size([1024])
218
torch.Size([1024])
219
torch.Size([256, 1024, 1, 1])
220
torch.Size([256])
221
torch.Size([256])
222
torch.Size([256, 256, 3, 3])
223
torch.Size([256])
224
torch.Size([256])
225
torch.Size([1024, 256, 1, 1])
226
torch.Size([1024])
227
torch.Size([1024])
228
torch.Size([256, 1024, 1, 1])
229
torch.Size([256])
230
torch.Size([256])
231
torch.Size([256, 256, 3, 3])
232
torch.Size([256])
233
torch.Size([256])
234
torch.Size([1024, 256, 1, 1])
235
torch.Size([1024])
236
torch.Size([1024])
237
torch.Size([256, 1024, 1, 1])
238
torch.Size([256])
239
torch.Size([256])
240
torch.Size([256, 256, 3, 3])
241
torch.Size([256])
242
torch.Size([256])
243
torch.Size([1024, 256, 1, 1])
244
torch.Size([1024])
245
torch.Size([1024])
246
torch.Size([256, 1024, 1, 1])
247
torch.Size([256])
248
torch.Size([256])
249
torch.Size([256, 256, 3, 3])
250
torch.Size([256])
251
torch.Size([256])
252
torch.Size([1024, 256, 1, 1])
253
torch.Size([1024])
254
torch.Size([1024])
255
torch.Size([256, 1024, 1, 1])
256
torch.Size([256])
257
torch.Size([256])
258
torch.Size([256, 256, 3, 3])
259
torch.Size([256])
260
torch.Size([256])
261
torch.Size([1024, 256, 1, 1])
262
torch.Size([1024])
263
torch.Size([1024])
264
torch.Size([256, 1024, 1, 1])
265
torch.Size([256])
266
torch.Size([256])
267
torch.Size([256, 256, 3, 3])
268
torch.Size([256])
269
torch.Size([256])
270
torch.Size([1024, 256, 1, 1])
271
torch.Size([1024])
272
torch.Size([1024])
273
torch.Size([256, 1024, 1, 1])
274
torch.Size([256])
275
torch.Size([256])
276
torch.Size([256, 256, 3, 3])
277
torch.Size([256])
278
torch.Size([256])
279
torch.Size([1024, 256, 1, 1])
280
torch.Size([1024])
281
torch.Size([1024])
282
torch.Size([256, 1024, 1, 1])
283
torch.Size([256])
284
torch.Size([256])
285
torch.Size([256, 256, 3, 3])
286
torch.Size([256])
287
torch.Size([256])
288
torch.Size([1024, 256, 1, 1])
289
torch.Size([1024])
290
torch.Size([1024])
291
torch.Size([256, 1024, 1, 1])
292
torch.Size([256])
293
torch.Size([256])
294
torch.Size([256, 256, 3, 3])
295
torch.Size([256])
296
torch.Size([256])
297
torch.Size([1024, 256, 1, 1])
298
torch.Size([1024])
299
torch.Size([1024])
300
torch.Size([256, 1024, 1, 1])
301
torch.Size([256])
302
torch.Size([256])
303
torch.Size([256, 256, 3, 3])
304
torch.Size([256])
305
torch.Size([256])
306
torch.Size([1024, 256, 1, 1])
307
torch.Size([1024])
308
torch.Size([1024])
309
torch.Size([256, 1024, 1, 1])
310
torch.Size([256])
311
torch.Size([256])
312
torch.Size([256, 256, 3, 3])
313
torch.Size([256])
314
torch.Size([256])
315
torch.Size([1024, 256, 1, 1])
316
torch.Size([1024])
317
torch.Size([1024])
318
torch.Size([256, 1024, 1, 1])
319
torch.Size([256])
320
torch.Size([256])
321
torch.Size([256, 256, 3, 3])
322
torch.Size([256])
323
torch.Size([256])
324
torch.Size([1024, 256, 1, 1])
325
torch.Size([1024])
326
torch.Size([1024])
327
torch.Size([256, 1024, 1, 1])
328
torch.Size([256])
329
torch.Size([256])
330
torch.Size([256, 256, 3, 3])
331
torch.Size([256])
332
torch.Size([256])
333
torch.Size([1024, 256, 1, 1])
334
torch.Size([1024])
335
torch.Size([1024])
336
torch.Size([256, 1024, 1, 1])
337
torch.Size([256])
338
torch.Size([256])
339
torch.Size([256, 256, 3, 3])
340
torch.Size([256])
341
torch.Size([256])
342
torch.Size([1024, 256, 1, 1])
343
torch.Size([1024])
344
torch.Size([1024])
345
torch.Size([256, 1024, 1, 1])
346
torch.Size([256])
347
torch.Size([256])
348
torch.Size([256, 256, 3, 3])
349
torch.Size([256])
350
torch.Size([256])
351
torch.Size([1024, 256, 1, 1])
352
torch.Size([1024])
353
torch.Size([1024])
354
torch.Size([256, 1024, 1, 1])
355
torch.Size([256])
356
torch.Size([256])
357
torch.Size([256, 256, 3, 3])
358
torch.Size([256])
359
torch.Size([256])
360
torch.Size([1024, 256, 1, 1])
361
torch.Size([1024])
362
torch.Size([1024])
363
torch.Size([256, 1024, 1, 1])
364
torch.Size([256])
365
torch.Size([256])
366
torch.Size([256, 256, 3, 3])
367
torch.Size([256])
368
torch.Size([256])
369
torch.Size([1024, 256, 1, 1])
370
torch.Size([1024])
371
torch.Size([1024])
372
torch.Size([256, 1024, 1, 1])
373
torch.Size([256])
374
torch.Size([256])
375
torch.Size([256, 256, 3, 3])
376
torch.Size([256])
377
torch.Size([256])
378
torch.Size([1024, 256, 1, 1])
379
torch.Size([1024])
380
torch.Size([1024])
381
torch.Size([256, 1024, 1, 1])
382
torch.Size([256])
383
torch.Size([256])
384
torch.Size([256, 256, 3, 3])
385
torch.Size([256])
386
torch.Size([256])
387
torch.Size([1024, 256, 1, 1])
388
torch.Size([1024])
389
torch.Size([1024])
390
torch.Size([256, 1024, 1, 1])
391
torch.Size([256])
392
torch.Size([256])
393
torch.Size([256, 256, 3, 3])
394
torch.Size([256])
395
torch.Size([256])
396
torch.Size([1024, 256, 1, 1])
397
torch.Size([1024])
398
torch.Size([1024])
399
torch.Size([256, 1024, 1, 1])
400
torch.Size([256])
401
torch.Size([256])
402
torch.Size([256, 256, 3, 3])
403
torch.Size([256])
404
torch.Size([256])
405
torch.Size([1024, 256, 1, 1])
406
torch.Size([1024])
407
torch.Size([1024])
408
torch.Size([256, 1024, 1, 1])
409
torch.Size([256])
410
torch.Size([256])
411
torch.Size([256, 256, 3, 3])
412
torch.Size([256])
413
torch.Size([256])
414
torch.Size([1024, 256, 1, 1])
415
torch.Size([1024])
416
torch.Size([1024])
417
torch.Size([256, 1024, 1, 1])
418
torch.Size([256])
419
torch.Size([256])
420
torch.Size([256, 256, 3, 3])
421
torch.Size([256])
422
torch.Size([256])
423
torch.Size([1024, 256, 1, 1])
424
torch.Size([1024])
425
torch.Size([1024])
426
torch.Size([256, 1024, 1, 1])
427
torch.Size([256])
428
torch.Size([256])
429
torch.Size([256, 256, 3, 3])
430
torch.Size([256])
431
torch.Size([256])
432
torch.Size([1024, 256, 1, 1])
433
torch.Size([1024])
434
torch.Size([1024])
435
torch.Size([512, 1024, 1, 1])
436
torch.Size([512])
437
torch.Size([512])
438
torch.Size([512, 512, 3, 3])
439
torch.Size([512])
440
torch.Size([512])
441
torch.Size([2048, 512, 1, 1])
442
torch.Size([2048])
443
torch.Size([2048])
444
torch.Size([2048, 1024, 1, 1])
445
torch.Size([2048])
446
torch.Size([2048])
447
torch.Size([512, 2048, 1, 1])
448
torch.Size([512])
449
torch.Size([512])
450
torch.Size([512, 512, 3, 3])
451
torch.Size([512])
452
torch.Size([512])
453
torch.Size([2048, 512, 1, 1])
454
torch.Size([2048])
455
torch.Size([2048])
456
torch.Size([512, 2048, 1, 1])
457
torch.Size([512])
458
torch.Size([512])
459
torch.Size([512, 512, 3, 3])
460
torch.Size([512])
461
torch.Size([512])
462
torch.Size([2048, 512, 1, 1])
463
torch.Size([2048])
464
torch.Size([2048])
465
torch.Size([100, 2048])
466
torch.Size([100])
467
Finished defence with time: 0:02:05.396593
Attack - Iter-0: Rec_loss-0.0951.
Attack - Iter-1000: Rec_loss-0.0727.
Attack - Iter-2000: Rec_loss-0.0736.
Attack - Iter-3000: Rec_loss-0.0756.
Attack - Iter-4000: Rec_loss-0.0745.
Attack - Iter-5000: Rec_loss-0.0755.
Attack - Iter-6000: Rec_loss-0.0748.
Attack - Iter-7000: Rec_loss-0.0747.
Attack - Iter-8000: Rec_loss-0.0752.
Attack - Iter-9000: Rec_loss-0.0750.
Attack - Iter-9999: Rec_loss-0.0750.
PSNR 18.5175 SSIM 0.5082 LPIPS -0.0000
Tuesday, 29. October 2024 01:01PM
Finished computations with time: 0:13:48.619409
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=50.0, layer_num=465, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([7])
Proxy_labels: tensor([35])
Initial with cifar100
torch.Size([100, 2048]) torch.Size([2048])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 1, 1])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([256, 64, 1, 1])
10
torch.Size([256])
11
torch.Size([256])
12
torch.Size([256, 64, 1, 1])
13
torch.Size([256])
14
torch.Size([256])
15
torch.Size([64, 256, 1, 1])
16
torch.Size([64])
17
torch.Size([64])
18
torch.Size([64, 64, 3, 3])
19
torch.Size([64])
20
torch.Size([64])
21
torch.Size([256, 64, 1, 1])
22
torch.Size([256])
23
torch.Size([256])
24
torch.Size([64, 256, 1, 1])
25
torch.Size([64])
26
torch.Size([64])
27
torch.Size([64, 64, 3, 3])
28
torch.Size([64])
29
torch.Size([64])
30
torch.Size([256, 64, 1, 1])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([128, 256, 1, 1])
34
torch.Size([128])
35
torch.Size([128])
36
torch.Size([128, 128, 3, 3])
37
torch.Size([128])
38
torch.Size([128])
39
torch.Size([512, 128, 1, 1])
40
torch.Size([512])
41
torch.Size([512])
42
torch.Size([512, 256, 1, 1])
43
torch.Size([512])
44
torch.Size([512])
45
torch.Size([128, 512, 1, 1])
46
torch.Size([128])
47
torch.Size([128])
48
torch.Size([128, 128, 3, 3])
49
torch.Size([128])
50
torch.Size([128])
51
torch.Size([512, 128, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([128, 512, 1, 1])
55
torch.Size([128])
56
torch.Size([128])
57
torch.Size([128, 128, 3, 3])
58
torch.Size([128])
59
torch.Size([128])
60
torch.Size([512, 128, 1, 1])
61
torch.Size([512])
62
torch.Size([512])
63
torch.Size([128, 512, 1, 1])
64
torch.Size([128])
65
torch.Size([128])
66
torch.Size([128, 128, 3, 3])
67
torch.Size([128])
68
torch.Size([128])
69
torch.Size([512, 128, 1, 1])
70
torch.Size([512])
71
torch.Size([512])
72
torch.Size([128, 512, 1, 1])
73
torch.Size([128])
74
torch.Size([128])
75
torch.Size([128, 128, 3, 3])
76
torch.Size([128])
77
torch.Size([128])
78
torch.Size([512, 128, 1, 1])
79
torch.Size([512])
80
torch.Size([512])
81
torch.Size([128, 512, 1, 1])
82
torch.Size([128])
83
torch.Size([128])
84
torch.Size([128, 128, 3, 3])
85
torch.Size([128])
86
torch.Size([128])
87
torch.Size([512, 128, 1, 1])
88
torch.Size([512])
89
torch.Size([512])
90
torch.Size([128, 512, 1, 1])
91
torch.Size([128])
92
torch.Size([128])
93
torch.Size([128, 128, 3, 3])
94
torch.Size([128])
95
torch.Size([128])
96
torch.Size([512, 128, 1, 1])
97
torch.Size([512])
98
torch.Size([512])
99
torch.Size([128, 512, 1, 1])
100
torch.Size([128])
101
torch.Size([128])
102
torch.Size([128, 128, 3, 3])
103
torch.Size([128])
104
torch.Size([128])
105
torch.Size([512, 128, 1, 1])
106
torch.Size([512])
107
torch.Size([512])
108
torch.Size([256, 512, 1, 1])
109
torch.Size([256])
110
torch.Size([256])
111
torch.Size([256, 256, 3, 3])
112
torch.Size([256])
113
torch.Size([256])
114
torch.Size([1024, 256, 1, 1])
115
torch.Size([1024])
116
torch.Size([1024])
117
torch.Size([1024, 512, 1, 1])
118
torch.Size([1024])
119
torch.Size([1024])
120
torch.Size([256, 1024, 1, 1])
121
torch.Size([256])
122
torch.Size([256])
123
torch.Size([256, 256, 3, 3])
124
torch.Size([256])
125
torch.Size([256])
126
torch.Size([1024, 256, 1, 1])
127
torch.Size([1024])
128
torch.Size([1024])
129
torch.Size([256, 1024, 1, 1])
130
torch.Size([256])
131
torch.Size([256])
132
torch.Size([256, 256, 3, 3])
133
torch.Size([256])
134
torch.Size([256])
135
torch.Size([1024, 256, 1, 1])
136
torch.Size([1024])
137
torch.Size([1024])
138
torch.Size([256, 1024, 1, 1])
139
torch.Size([256])
140
torch.Size([256])
141
torch.Size([256, 256, 3, 3])
142
torch.Size([256])
143
torch.Size([256])
144
torch.Size([1024, 256, 1, 1])
145
torch.Size([1024])
146
torch.Size([1024])
147
torch.Size([256, 1024, 1, 1])
148
torch.Size([256])
149
torch.Size([256])
150
torch.Size([256, 256, 3, 3])
151
torch.Size([256])
152
torch.Size([256])
153
torch.Size([1024, 256, 1, 1])
154
torch.Size([1024])
155
torch.Size([1024])
156
torch.Size([256, 1024, 1, 1])
157
torch.Size([256])
158
torch.Size([256])
159
torch.Size([256, 256, 3, 3])
160
torch.Size([256])
161
torch.Size([256])
162
torch.Size([1024, 256, 1, 1])
163
torch.Size([1024])
164
torch.Size([1024])
165
torch.Size([256, 1024, 1, 1])
166
torch.Size([256])
167
torch.Size([256])
168
torch.Size([256, 256, 3, 3])
169
torch.Size([256])
170
torch.Size([256])
171
torch.Size([1024, 256, 1, 1])
172
torch.Size([1024])
173
torch.Size([1024])
174
torch.Size([256, 1024, 1, 1])
175
torch.Size([256])
176
torch.Size([256])
177
torch.Size([256, 256, 3, 3])
178
torch.Size([256])
179
torch.Size([256])
180
torch.Size([1024, 256, 1, 1])
181
torch.Size([1024])
182
torch.Size([1024])
183
torch.Size([256, 1024, 1, 1])
184
torch.Size([256])
185
torch.Size([256])
186
torch.Size([256, 256, 3, 3])
187
torch.Size([256])
188
torch.Size([256])
189
torch.Size([1024, 256, 1, 1])
190
torch.Size([1024])
191
torch.Size([1024])
192
torch.Size([256, 1024, 1, 1])
193
torch.Size([256])
194
torch.Size([256])
195
torch.Size([256, 256, 3, 3])
196
torch.Size([256])
197
torch.Size([256])
198
torch.Size([1024, 256, 1, 1])
199
torch.Size([1024])
200
torch.Size([1024])
201
torch.Size([256, 1024, 1, 1])
202
torch.Size([256])
203
torch.Size([256])
204
torch.Size([256, 256, 3, 3])
205
torch.Size([256])
206
torch.Size([256])
207
torch.Size([1024, 256, 1, 1])
208
torch.Size([1024])
209
torch.Size([1024])
210
torch.Size([256, 1024, 1, 1])
211
torch.Size([256])
212
torch.Size([256])
213
torch.Size([256, 256, 3, 3])
214
torch.Size([256])
215
torch.Size([256])
216
torch.Size([1024, 256, 1, 1])
217
torch.Size([1024])
218
torch.Size([1024])
219
torch.Size([256, 1024, 1, 1])
220
torch.Size([256])
221
torch.Size([256])
222
torch.Size([256, 256, 3, 3])
223
torch.Size([256])
224
torch.Size([256])
225
torch.Size([1024, 256, 1, 1])
226
torch.Size([1024])
227
torch.Size([1024])
228
torch.Size([256, 1024, 1, 1])
229
torch.Size([256])
230
torch.Size([256])
231
torch.Size([256, 256, 3, 3])
232
torch.Size([256])
233
torch.Size([256])
234
torch.Size([1024, 256, 1, 1])
235
torch.Size([1024])
236
torch.Size([1024])
237
torch.Size([256, 1024, 1, 1])
238
torch.Size([256])
239
torch.Size([256])
240
torch.Size([256, 256, 3, 3])
241
torch.Size([256])
242
torch.Size([256])
243
torch.Size([1024, 256, 1, 1])
244
torch.Size([1024])
245
torch.Size([1024])
246
torch.Size([256, 1024, 1, 1])
247
torch.Size([256])
248
torch.Size([256])
249
torch.Size([256, 256, 3, 3])
250
torch.Size([256])
251
torch.Size([256])
252
torch.Size([1024, 256, 1, 1])
253
torch.Size([1024])
254
torch.Size([1024])
255
torch.Size([256, 1024, 1, 1])
256
torch.Size([256])
257
torch.Size([256])
258
torch.Size([256, 256, 3, 3])
259
torch.Size([256])
260
torch.Size([256])
261
torch.Size([1024, 256, 1, 1])
262
torch.Size([1024])
263
torch.Size([1024])
264
torch.Size([256, 1024, 1, 1])
265
torch.Size([256])
266
torch.Size([256])
267
torch.Size([256, 256, 3, 3])
268
torch.Size([256])
269
torch.Size([256])
270
torch.Size([1024, 256, 1, 1])
271
torch.Size([1024])
272
torch.Size([1024])
273
torch.Size([256, 1024, 1, 1])
274
torch.Size([256])
275
torch.Size([256])
276
torch.Size([256, 256, 3, 3])
277
torch.Size([256])
278
torch.Size([256])
279
torch.Size([1024, 256, 1, 1])
280
torch.Size([1024])
281
torch.Size([1024])
282
torch.Size([256, 1024, 1, 1])
283
torch.Size([256])
284
torch.Size([256])
285
torch.Size([256, 256, 3, 3])
286
torch.Size([256])
287
torch.Size([256])
288
torch.Size([1024, 256, 1, 1])
289
torch.Size([1024])
290
torch.Size([1024])
291
torch.Size([256, 1024, 1, 1])
292
torch.Size([256])
293
torch.Size([256])
294
torch.Size([256, 256, 3, 3])
295
torch.Size([256])
296
torch.Size([256])
297
torch.Size([1024, 256, 1, 1])
298
torch.Size([1024])
299
torch.Size([1024])
300
torch.Size([256, 1024, 1, 1])
301
torch.Size([256])
302
torch.Size([256])
303
torch.Size([256, 256, 3, 3])
304
torch.Size([256])
305
torch.Size([256])
306
torch.Size([1024, 256, 1, 1])
307
torch.Size([1024])
308
torch.Size([1024])
309
torch.Size([256, 1024, 1, 1])
310
torch.Size([256])
311
torch.Size([256])
312
torch.Size([256, 256, 3, 3])
313
torch.Size([256])
314
torch.Size([256])
315
torch.Size([1024, 256, 1, 1])
316
torch.Size([1024])
317
torch.Size([1024])
318
torch.Size([256, 1024, 1, 1])
319
torch.Size([256])
320
torch.Size([256])
321
torch.Size([256, 256, 3, 3])
322
torch.Size([256])
323
torch.Size([256])
324
torch.Size([1024, 256, 1, 1])
325
torch.Size([1024])
326
torch.Size([1024])
327
torch.Size([256, 1024, 1, 1])
328
torch.Size([256])
329
torch.Size([256])
330
torch.Size([256, 256, 3, 3])
331
torch.Size([256])
332
torch.Size([256])
333
torch.Size([1024, 256, 1, 1])
334
torch.Size([1024])
335
torch.Size([1024])
336
torch.Size([256, 1024, 1, 1])
337
torch.Size([256])
338
torch.Size([256])
339
torch.Size([256, 256, 3, 3])
340
torch.Size([256])
341
torch.Size([256])
342
torch.Size([1024, 256, 1, 1])
343
torch.Size([1024])
344
torch.Size([1024])
345
torch.Size([256, 1024, 1, 1])
346
torch.Size([256])
347
torch.Size([256])
348
torch.Size([256, 256, 3, 3])
349
torch.Size([256])
350
torch.Size([256])
351
torch.Size([1024, 256, 1, 1])
352
torch.Size([1024])
353
torch.Size([1024])
354
torch.Size([256, 1024, 1, 1])
355
torch.Size([256])
356
torch.Size([256])
357
torch.Size([256, 256, 3, 3])
358
torch.Size([256])
359
torch.Size([256])
360
torch.Size([1024, 256, 1, 1])
361
torch.Size([1024])
362
torch.Size([1024])
363
torch.Size([256, 1024, 1, 1])
364
torch.Size([256])
365
torch.Size([256])
366
torch.Size([256, 256, 3, 3])
367
torch.Size([256])
368
torch.Size([256])
369
torch.Size([1024, 256, 1, 1])
370
torch.Size([1024])
371
torch.Size([1024])
372
torch.Size([256, 1024, 1, 1])
373
torch.Size([256])
374
torch.Size([256])
375
torch.Size([256, 256, 3, 3])
376
torch.Size([256])
377
torch.Size([256])
378
torch.Size([1024, 256, 1, 1])
379
torch.Size([1024])
380
torch.Size([1024])
381
torch.Size([256, 1024, 1, 1])
382
torch.Size([256])
383
torch.Size([256])
384
torch.Size([256, 256, 3, 3])
385
torch.Size([256])
386
torch.Size([256])
387
torch.Size([1024, 256, 1, 1])
388
torch.Size([1024])
389
torch.Size([1024])
390
torch.Size([256, 1024, 1, 1])
391
torch.Size([256])
392
torch.Size([256])
393
torch.Size([256, 256, 3, 3])
394
torch.Size([256])
395
torch.Size([256])
396
torch.Size([1024, 256, 1, 1])
397
torch.Size([1024])
398
torch.Size([1024])
399
torch.Size([256, 1024, 1, 1])
400
torch.Size([256])
401
torch.Size([256])
402
torch.Size([256, 256, 3, 3])
403
torch.Size([256])
404
torch.Size([256])
405
torch.Size([1024, 256, 1, 1])
406
torch.Size([1024])
407
torch.Size([1024])
408
torch.Size([256, 1024, 1, 1])
409
torch.Size([256])
410
torch.Size([256])
411
torch.Size([256, 256, 3, 3])
412
torch.Size([256])
413
torch.Size([256])
414
torch.Size([1024, 256, 1, 1])
415
torch.Size([1024])
416
torch.Size([1024])
417
torch.Size([256, 1024, 1, 1])
418
torch.Size([256])
419
torch.Size([256])
420
torch.Size([256, 256, 3, 3])
421
torch.Size([256])
422
torch.Size([256])
423
torch.Size([1024, 256, 1, 1])
424
torch.Size([1024])
425
torch.Size([1024])
426
torch.Size([256, 1024, 1, 1])
427
torch.Size([256])
428
torch.Size([256])
429
torch.Size([256, 256, 3, 3])
430
torch.Size([256])
431
torch.Size([256])
432
torch.Size([1024, 256, 1, 1])
433
torch.Size([1024])
434
torch.Size([1024])
435
torch.Size([512, 1024, 1, 1])
436
torch.Size([512])
437
torch.Size([512])
438
torch.Size([512, 512, 3, 3])
439
torch.Size([512])
440
torch.Size([512])
441
torch.Size([2048, 512, 1, 1])
442
torch.Size([2048])
443
torch.Size([2048])
444
torch.Size([2048, 1024, 1, 1])
445
torch.Size([2048])
446
torch.Size([2048])
447
torch.Size([512, 2048, 1, 1])
448
torch.Size([512])
449
torch.Size([512])
450
torch.Size([512, 512, 3, 3])
451
torch.Size([512])
452
torch.Size([512])
453
torch.Size([2048, 512, 1, 1])
454
torch.Size([2048])
455
torch.Size([2048])
456
torch.Size([512, 2048, 1, 1])
457
torch.Size([512])
458
torch.Size([512])
459
torch.Size([512, 512, 3, 3])
460
torch.Size([512])
461
torch.Size([512])
462
torch.Size([2048, 512, 1, 1])
463
torch.Size([2048])
464
torch.Size([2048])
465
torch.Size([100, 2048])
466
torch.Size([100])
467
Finished defence with time: 0:02:03.190421
Attack - Iter-0: Rec_loss-0.2189.
Attack - Iter-1000: Rec_loss-0.2139.
Attack - Iter-2000: Rec_loss-0.2180.
Attack - Iter-3000: Rec_loss-0.2165.
Attack - Iter-4000: Rec_loss-0.2166.
Attack - Iter-5000: Rec_loss-0.2177.
Attack - Iter-6000: Rec_loss-0.2169.
Attack - Iter-7000: Rec_loss-0.2176.
Attack - Iter-8000: Rec_loss-0.2184.
Attack - Iter-9000: Rec_loss-0.2184.
Attack - Iter-9999: Rec_loss-0.2173.
PSNR 15.5845 SSIM 0.3053 LPIPS -0.0000
Tuesday, 29. October 2024 01:16PM
Finished computations with time: 0:13:49.871260
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=70.0, layer_num=465, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([7])
Proxy_labels: tensor([35])
Initial with cifar100
torch.Size([100, 2048]) torch.Size([2048])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 1, 1])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([256, 64, 1, 1])
10
torch.Size([256])
11
torch.Size([256])
12
torch.Size([256, 64, 1, 1])
13
torch.Size([256])
14
torch.Size([256])
15
torch.Size([64, 256, 1, 1])
16
torch.Size([64])
17
torch.Size([64])
18
torch.Size([64, 64, 3, 3])
19
torch.Size([64])
20
torch.Size([64])
21
torch.Size([256, 64, 1, 1])
22
torch.Size([256])
23
torch.Size([256])
24
torch.Size([64, 256, 1, 1])
25
torch.Size([64])
26
torch.Size([64])
27
torch.Size([64, 64, 3, 3])
28
torch.Size([64])
29
torch.Size([64])
30
torch.Size([256, 64, 1, 1])
31
torch.Size([256])
32
torch.Size([256])
33
torch.Size([128, 256, 1, 1])
34
torch.Size([128])
35
torch.Size([128])
36
torch.Size([128, 128, 3, 3])
37
torch.Size([128])
38
torch.Size([128])
39
torch.Size([512, 128, 1, 1])
40
torch.Size([512])
41
torch.Size([512])
42
torch.Size([512, 256, 1, 1])
43
torch.Size([512])
44
torch.Size([512])
45
torch.Size([128, 512, 1, 1])
46
torch.Size([128])
47
torch.Size([128])
48
torch.Size([128, 128, 3, 3])
49
torch.Size([128])
50
torch.Size([128])
51
torch.Size([512, 128, 1, 1])
52
torch.Size([512])
53
torch.Size([512])
54
torch.Size([128, 512, 1, 1])
55
torch.Size([128])
56
torch.Size([128])
57
torch.Size([128, 128, 3, 3])
58
torch.Size([128])
59
torch.Size([128])
60
torch.Size([512, 128, 1, 1])
61
torch.Size([512])
62
torch.Size([512])
63
torch.Size([128, 512, 1, 1])
64
torch.Size([128])
65
torch.Size([128])
66
torch.Size([128, 128, 3, 3])
67
torch.Size([128])
68
torch.Size([128])
69
torch.Size([512, 128, 1, 1])
70
torch.Size([512])
71
torch.Size([512])
72
torch.Size([128, 512, 1, 1])
73
torch.Size([128])
74
torch.Size([128])
75
torch.Size([128, 128, 3, 3])
76
torch.Size([128])
77
torch.Size([128])
78
torch.Size([512, 128, 1, 1])
79
torch.Size([512])
80
torch.Size([512])
81
torch.Size([128, 512, 1, 1])
82
torch.Size([128])
83
torch.Size([128])
84
torch.Size([128, 128, 3, 3])
85
torch.Size([128])
86
torch.Size([128])
87
torch.Size([512, 128, 1, 1])
88
torch.Size([512])
89
torch.Size([512])
90
torch.Size([128, 512, 1, 1])
91
torch.Size([128])
92
torch.Size([128])
93
torch.Size([128, 128, 3, 3])
94
torch.Size([128])
95
torch.Size([128])
96
torch.Size([512, 128, 1, 1])
97
torch.Size([512])
98
torch.Size([512])
99
torch.Size([128, 512, 1, 1])
100
torch.Size([128])
101
torch.Size([128])
102
torch.Size([128, 128, 3, 3])
103
torch.Size([128])
104
torch.Size([128])
105
torch.Size([512, 128, 1, 1])
106
torch.Size([512])
107
torch.Size([512])
108
torch.Size([256, 512, 1, 1])
109
torch.Size([256])
110
torch.Size([256])
111
torch.Size([256, 256, 3, 3])
112
torch.Size([256])
113
torch.Size([256])
114
torch.Size([1024, 256, 1, 1])
115
torch.Size([1024])
116
torch.Size([1024])
117
torch.Size([1024, 512, 1, 1])
118
torch.Size([1024])
119
torch.Size([1024])
120
torch.Size([256, 1024, 1, 1])
121
torch.Size([256])
122
torch.Size([256])
123
torch.Size([256, 256, 3, 3])
124
torch.Size([256])
125
torch.Size([256])
126
torch.Size([1024, 256, 1, 1])
127
torch.Size([1024])
128
torch.Size([1024])
129
torch.Size([256, 1024, 1, 1])
130
torch.Size([256])
131
torch.Size([256])
132
torch.Size([256, 256, 3, 3])
133
torch.Size([256])
134
torch.Size([256])
135
torch.Size([1024, 256, 1, 1])
136
torch.Size([1024])
137
torch.Size([1024])
138
torch.Size([256, 1024, 1, 1])
139
torch.Size([256])
140
torch.Size([256])
141
torch.Size([256, 256, 3, 3])
142
torch.Size([256])
143
torch.Size([256])
144
torch.Size([1024, 256, 1, 1])
145
torch.Size([1024])
146
torch.Size([1024])
147
torch.Size([256, 1024, 1, 1])
148
torch.Size([256])
149
torch.Size([256])
150
torch.Size([256, 256, 3, 3])
151
torch.Size([256])
152
torch.Size([256])
153
torch.Size([1024, 256, 1, 1])
154
torch.Size([1024])
155
torch.Size([1024])
156
torch.Size([256, 1024, 1, 1])
157
torch.Size([256])
158
torch.Size([256])
159
torch.Size([256, 256, 3, 3])
160
torch.Size([256])
161
torch.Size([256])
162
torch.Size([1024, 256, 1, 1])
163
torch.Size([1024])
164
torch.Size([1024])
165
torch.Size([256, 1024, 1, 1])
166
torch.Size([256])
167
torch.Size([256])
168
torch.Size([256, 256, 3, 3])
169
torch.Size([256])
170
torch.Size([256])
171
torch.Size([1024, 256, 1, 1])
172
torch.Size([1024])
173
torch.Size([1024])
174
torch.Size([256, 1024, 1, 1])
175
torch.Size([256])
176
torch.Size([256])
177
torch.Size([256, 256, 3, 3])
178
torch.Size([256])
179
torch.Size([256])
180
torch.Size([1024, 256, 1, 1])
181
torch.Size([1024])
182
torch.Size([1024])
183
torch.Size([256, 1024, 1, 1])
184
torch.Size([256])
185
torch.Size([256])
186
torch.Size([256, 256, 3, 3])
187
torch.Size([256])
188
torch.Size([256])
189
torch.Size([1024, 256, 1, 1])
190
torch.Size([1024])
191
torch.Size([1024])
192
torch.Size([256, 1024, 1, 1])
193
torch.Size([256])
194
torch.Size([256])
195
torch.Size([256, 256, 3, 3])
196
torch.Size([256])
197
torch.Size([256])
198
torch.Size([1024, 256, 1, 1])
199
torch.Size([1024])
200
torch.Size([1024])
201
torch.Size([256, 1024, 1, 1])
202
torch.Size([256])
203
torch.Size([256])
204
torch.Size([256, 256, 3, 3])
205
torch.Size([256])
206
torch.Size([256])
207
torch.Size([1024, 256, 1, 1])
208
torch.Size([1024])
209
torch.Size([1024])
210
torch.Size([256, 1024, 1, 1])
211
torch.Size([256])
212
torch.Size([256])
213
torch.Size([256, 256, 3, 3])
214
torch.Size([256])
215
torch.Size([256])
216
torch.Size([1024, 256, 1, 1])
217
torch.Size([1024])
218
torch.Size([1024])
219
torch.Size([256, 1024, 1, 1])
220
torch.Size([256])
221
torch.Size([256])
222
torch.Size([256, 256, 3, 3])
223
torch.Size([256])
224
torch.Size([256])
225
torch.Size([1024, 256, 1, 1])
226
torch.Size([1024])
227
torch.Size([1024])
228
torch.Size([256, 1024, 1, 1])
229
torch.Size([256])
230
torch.Size([256])
231
torch.Size([256, 256, 3, 3])
232
torch.Size([256])
233
torch.Size([256])
234
torch.Size([1024, 256, 1, 1])
235
torch.Size([1024])
236
torch.Size([1024])
237
torch.Size([256, 1024, 1, 1])
238
torch.Size([256])
239
torch.Size([256])
240
torch.Size([256, 256, 3, 3])
241
torch.Size([256])
242
torch.Size([256])
243
torch.Size([1024, 256, 1, 1])
244
torch.Size([1024])
245
torch.Size([1024])
246
torch.Size([256, 1024, 1, 1])
247
torch.Size([256])
248
torch.Size([256])
249
torch.Size([256, 256, 3, 3])
250
torch.Size([256])
251
torch.Size([256])
252
torch.Size([1024, 256, 1, 1])
253
torch.Size([1024])
254
torch.Size([1024])
255
torch.Size([256, 1024, 1, 1])
256
torch.Size([256])
257
torch.Size([256])
258
torch.Size([256, 256, 3, 3])
259
torch.Size([256])
260
torch.Size([256])
261
torch.Size([1024, 256, 1, 1])
262
torch.Size([1024])
263
torch.Size([1024])
264
torch.Size([256, 1024, 1, 1])
265
torch.Size([256])
266
torch.Size([256])
267
torch.Size([256, 256, 3, 3])
268
torch.Size([256])
269
torch.Size([256])
270
torch.Size([1024, 256, 1, 1])
271
torch.Size([1024])
272
torch.Size([1024])
273
torch.Size([256, 1024, 1, 1])
274
torch.Size([256])
275
torch.Size([256])
276
torch.Size([256, 256, 3, 3])
277
torch.Size([256])
278
torch.Size([256])
279
torch.Size([1024, 256, 1, 1])
280
torch.Size([1024])
281
torch.Size([1024])
282
torch.Size([256, 1024, 1, 1])
283
torch.Size([256])
284
torch.Size([256])
285
torch.Size([256, 256, 3, 3])
286
torch.Size([256])
287
torch.Size([256])
288
torch.Size([1024, 256, 1, 1])
289
torch.Size([1024])
290
torch.Size([1024])
291
torch.Size([256, 1024, 1, 1])
292
torch.Size([256])
293
torch.Size([256])
294
torch.Size([256, 256, 3, 3])
295
torch.Size([256])
296
torch.Size([256])
297
torch.Size([1024, 256, 1, 1])
298
torch.Size([1024])
299
torch.Size([1024])
300
torch.Size([256, 1024, 1, 1])
301
torch.Size([256])
302
torch.Size([256])
303
torch.Size([256, 256, 3, 3])
304
torch.Size([256])
305
torch.Size([256])
306
torch.Size([1024, 256, 1, 1])
307
torch.Size([1024])
308
torch.Size([1024])
309
torch.Size([256, 1024, 1, 1])
310
torch.Size([256])
311
torch.Size([256])
312
torch.Size([256, 256, 3, 3])
313
torch.Size([256])
314
torch.Size([256])
315
torch.Size([1024, 256, 1, 1])
316
torch.Size([1024])
317
torch.Size([1024])
318
torch.Size([256, 1024, 1, 1])
319
torch.Size([256])
320
torch.Size([256])
321
torch.Size([256, 256, 3, 3])
322
torch.Size([256])
323
torch.Size([256])
324
torch.Size([1024, 256, 1, 1])
325
torch.Size([1024])
326
torch.Size([1024])
327
torch.Size([256, 1024, 1, 1])
328
torch.Size([256])
329
torch.Size([256])
330
torch.Size([256, 256, 3, 3])
331
torch.Size([256])
332
torch.Size([256])
333
torch.Size([1024, 256, 1, 1])
334
torch.Size([1024])
335
torch.Size([1024])
336
torch.Size([256, 1024, 1, 1])
337
torch.Size([256])
338
torch.Size([256])
339
torch.Size([256, 256, 3, 3])
340
torch.Size([256])
341
torch.Size([256])
342
torch.Size([1024, 256, 1, 1])
343
torch.Size([1024])
344
torch.Size([1024])
345
torch.Size([256, 1024, 1, 1])
346
torch.Size([256])
347
torch.Size([256])
348
torch.Size([256, 256, 3, 3])
349
torch.Size([256])
350
torch.Size([256])
351
torch.Size([1024, 256, 1, 1])
352
torch.Size([1024])
353
torch.Size([1024])
354
torch.Size([256, 1024, 1, 1])
355
torch.Size([256])
356
torch.Size([256])
357
torch.Size([256, 256, 3, 3])
358
torch.Size([256])
359
torch.Size([256])
360
torch.Size([1024, 256, 1, 1])
361
torch.Size([1024])
362
torch.Size([1024])
363
torch.Size([256, 1024, 1, 1])
364
torch.Size([256])
365
torch.Size([256])
366
torch.Size([256, 256, 3, 3])
367
torch.Size([256])
368
torch.Size([256])
369
torch.Size([1024, 256, 1, 1])
370
torch.Size([1024])
371
torch.Size([1024])
372
torch.Size([256, 1024, 1, 1])
373
torch.Size([256])
374
torch.Size([256])
375
torch.Size([256, 256, 3, 3])
376
torch.Size([256])
377
torch.Size([256])
378
torch.Size([1024, 256, 1, 1])
379
torch.Size([1024])
380
torch.Size([1024])
381
torch.Size([256, 1024, 1, 1])
382
torch.Size([256])
383
torch.Size([256])
384
torch.Size([256, 256, 3, 3])
385
torch.Size([256])
386
torch.Size([256])
387
torch.Size([1024, 256, 1, 1])
388
torch.Size([1024])
389
torch.Size([1024])
390
torch.Size([256, 1024, 1, 1])
391
torch.Size([256])
392
torch.Size([256])
393
torch.Size([256, 256, 3, 3])
394
torch.Size([256])
395
torch.Size([256])
396
torch.Size([1024, 256, 1, 1])
397
torch.Size([1024])
398
torch.Size([1024])
399
torch.Size([256, 1024, 1, 1])
400
torch.Size([256])
401
torch.Size([256])
402
torch.Size([256, 256, 3, 3])
403
torch.Size([256])
404
torch.Size([256])
405
torch.Size([1024, 256, 1, 1])
406
torch.Size([1024])
407
torch.Size([1024])
408
torch.Size([256, 1024, 1, 1])
409
torch.Size([256])
410
torch.Size([256])
411
torch.Size([256, 256, 3, 3])
412
torch.Size([256])
413
torch.Size([256])
414
torch.Size([1024, 256, 1, 1])
415
torch.Size([1024])
416
torch.Size([1024])
417
torch.Size([256, 1024, 1, 1])
418
torch.Size([256])
419
torch.Size([256])
420
torch.Size([256, 256, 3, 3])
421
torch.Size([256])
422
torch.Size([256])
423
torch.Size([1024, 256, 1, 1])
424
torch.Size([1024])
425
torch.Size([1024])
426
torch.Size([256, 1024, 1, 1])
427
torch.Size([256])
428
torch.Size([256])
429
torch.Size([256, 256, 3, 3])
430
torch.Size([256])
431
torch.Size([256])
432
torch.Size([1024, 256, 1, 1])
433
torch.Size([1024])
434
torch.Size([1024])
435
torch.Size([512, 1024, 1, 1])
436
torch.Size([512])
437
torch.Size([512])
438
torch.Size([512, 512, 3, 3])
439
torch.Size([512])
440
torch.Size([512])
441
torch.Size([2048, 512, 1, 1])
442
torch.Size([2048])
443
torch.Size([2048])
444
torch.Size([2048, 1024, 1, 1])
445
torch.Size([2048])
446
torch.Size([2048])
447
torch.Size([512, 2048, 1, 1])
448
torch.Size([512])
449
torch.Size([512])
450
torch.Size([512, 512, 3, 3])
451
torch.Size([512])
452
torch.Size([512])
453
torch.Size([2048, 512, 1, 1])
454
torch.Size([2048])
455
torch.Size([2048])
456
torch.Size([512, 2048, 1, 1])
457
torch.Size([512])
458
torch.Size([512])
459
torch.Size([512, 512, 3, 3])
460
torch.Size([512])
461
torch.Size([512])
462
torch.Size([2048, 512, 1, 1])
463
torch.Size([2048])
464
torch.Size([2048])
465
torch.Size([100, 2048])
466
torch.Size([100])
467
Finished defence with time: 0:02:02.966738
Attack - Iter-0: Rec_loss-0.2797.
Attack - Iter-1000: Rec_loss-0.2705.
Attack - Iter-2000: Rec_loss-0.2742.
Attack - Iter-3000: Rec_loss-0.2716.
Attack - Iter-4000: Rec_loss-0.2774.
Attack - Iter-5000: Rec_loss-0.2751.
Attack - Iter-6000: Rec_loss-0.2738.
Attack - Iter-7000: Rec_loss-0.2764.
Attack - Iter-8000: Rec_loss-0.2722.
Attack - Iter-9000: Rec_loss-0.2795.
Attack - Iter-9999: Rec_loss-0.2744.
PSNR 11.8863 SSIM 0.1503 LPIPS -0.0000
Tuesday, 29. October 2024 03:51PM
Finished computations with time: 0:13:46.797251
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=30.0, layer_num=32, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([97])
Proxy_labels: tensor([4])
Initial with cifar100
torch.Size([128]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([64, 64, 3, 3])
16
torch.Size([64])
17
torch.Size([64])
18
torch.Size([64, 64, 3, 3])
19
torch.Size([64])
20
torch.Size([64])
21
torch.Size([128, 64, 3, 3])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 64, 1, 1])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([128, 128, 3, 3])
31
torch.Size([128])
32
torch.Size([128])
33
torch.Size([128, 128, 3, 3])
34
torch.Size([128])
35
torch.Size([128])
36
torch.Size([128, 128, 3, 3])
37
torch.Size([128])
38
torch.Size([128])
39
torch.Size([128, 128, 3, 3])
40
torch.Size([128])
41
torch.Size([128])
42
torch.Size([128, 128, 3, 3])
43
torch.Size([128])
44
torch.Size([128])
45
torch.Size([128, 128, 3, 3])
46
torch.Size([128])
47
torch.Size([128])
48
torch.Size([256, 128, 3, 3])
49
torch.Size([256])
50
torch.Size([256])
51
torch.Size([256, 256, 3, 3])
52
torch.Size([256])
53
torch.Size([256])
54
torch.Size([256, 128, 1, 1])
55
torch.Size([256])
56
torch.Size([256])
57
torch.Size([256, 256, 3, 3])
58
torch.Size([256])
59
torch.Size([256])
60
torch.Size([256, 256, 3, 3])
61
torch.Size([256])
62
torch.Size([256])
63
torch.Size([256, 256, 3, 3])
64
torch.Size([256])
65
torch.Size([256])
66
torch.Size([256, 256, 3, 3])
67
torch.Size([256])
68
torch.Size([256])
69
torch.Size([256, 256, 3, 3])
70
torch.Size([256])
71
torch.Size([256])
72
torch.Size([256, 256, 3, 3])
73
torch.Size([256])
74
torch.Size([256])
75
torch.Size([256, 256, 3, 3])
76
torch.Size([256])
77
torch.Size([256])
78
torch.Size([256, 256, 3, 3])
79
torch.Size([256])
80
torch.Size([256])
81
torch.Size([256, 256, 3, 3])
82
torch.Size([256])
83
torch.Size([256])
84
torch.Size([256, 256, 3, 3])
85
torch.Size([256])
86
torch.Size([256])
87
torch.Size([512, 256, 3, 3])
88
torch.Size([512])
89
torch.Size([512])
90
torch.Size([512, 512, 3, 3])
91
torch.Size([512])
92
torch.Size([512])
93
torch.Size([512, 256, 1, 1])
94
torch.Size([512])
95
torch.Size([512])
96
torch.Size([512, 512, 3, 3])
97
torch.Size([512])
98
torch.Size([512])
99
torch.Size([512, 512, 3, 3])
100
torch.Size([512])
101
torch.Size([512])
102
torch.Size([512, 512, 3, 3])
103
torch.Size([512])
104
torch.Size([512])
105
torch.Size([512, 512, 3, 3])
106
torch.Size([512])
107
torch.Size([512])
108
torch.Size([100, 512])
109
torch.Size([100])
110
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=10000, lr=0.1, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=40.0, layer_num=108, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([97])
Proxy_labels: tensor([4])
Initial with cifar100
torch.Size([100, 512]) torch.Size([512])
0
torch.Size([64, 3, 7, 7])
1
torch.Size([64])
2
torch.Size([64])
3
torch.Size([64, 64, 3, 3])
4
torch.Size([64])
5
torch.Size([64])
6
torch.Size([64, 64, 3, 3])
7
torch.Size([64])
8
torch.Size([64])
9
torch.Size([64, 64, 3, 3])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([64, 64, 3, 3])
13
torch.Size([64])
14
torch.Size([64])
15
torch.Size([64, 64, 3, 3])
16
torch.Size([64])
17
torch.Size([64])
18
torch.Size([64, 64, 3, 3])
19
torch.Size([64])
20
torch.Size([64])
21
torch.Size([128, 64, 3, 3])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128, 64, 1, 1])
28
torch.Size([128])
29
torch.Size([128])
30
torch.Size([128, 128, 3, 3])
31
torch.Size([128])
32
torch.Size([128])
33
torch.Size([128, 128, 3, 3])
34
torch.Size([128])
35
torch.Size([128])
36
torch.Size([128, 128, 3, 3])
37
torch.Size([128])
38
torch.Size([128])
39
torch.Size([128, 128, 3, 3])
40
torch.Size([128])
41
torch.Size([128])
42
torch.Size([128, 128, 3, 3])
43
torch.Size([128])
44
torch.Size([128])
45
torch.Size([128, 128, 3, 3])
46
torch.Size([128])
47
torch.Size([128])
48
torch.Size([256, 128, 3, 3])
49
torch.Size([256])
50
torch.Size([256])
51
torch.Size([256, 256, 3, 3])
52
torch.Size([256])
53
torch.Size([256])
54
torch.Size([256, 128, 1, 1])
55
torch.Size([256])
56
torch.Size([256])
57
torch.Size([256, 256, 3, 3])
58
torch.Size([256])
59
torch.Size([256])
60
torch.Size([256, 256, 3, 3])
61
torch.Size([256])
62
torch.Size([256])
63
torch.Size([256, 256, 3, 3])
64
torch.Size([256])
65
torch.Size([256])
66
torch.Size([256, 256, 3, 3])
67
torch.Size([256])
68
torch.Size([256])
69
torch.Size([256, 256, 3, 3])
70
torch.Size([256])
71
torch.Size([256])
72
torch.Size([256, 256, 3, 3])
73
torch.Size([256])
74
torch.Size([256])
75
torch.Size([256, 256, 3, 3])
76
torch.Size([256])
77
torch.Size([256])
78
torch.Size([256, 256, 3, 3])
79
torch.Size([256])
80
torch.Size([256])
81
torch.Size([256, 256, 3, 3])
82
torch.Size([256])
83
torch.Size([256])
84
torch.Size([256, 256, 3, 3])
85
torch.Size([256])
86
torch.Size([256])
87
torch.Size([512, 256, 3, 3])
88
torch.Size([512])
89
torch.Size([512])
90
torch.Size([512, 512, 3, 3])
91
torch.Size([512])
92
torch.Size([512])
93
torch.Size([512, 256, 1, 1])
94
torch.Size([512])
95
torch.Size([512])
96
torch.Size([512, 512, 3, 3])
97
torch.Size([512])
98
torch.Size([512])
99
torch.Size([512, 512, 3, 3])
100
torch.Size([512])
101
torch.Size([512])
102
torch.Size([512, 512, 3, 3])
103
torch.Size([512])
104
torch.Size([512])
105
torch.Size([512, 512, 3, 3])
106
torch.Size([512])
107
torch.Size([512])
108
torch.Size([100, 512])
109
torch.Size([100])
110
Finished defence with time: 0:00:28.040056
Attack - Iter-0: Rec_loss-0.4170.
Attack - Iter-1000: Rec_loss-0.2823.
Attack - Iter-2000: Rec_loss-0.2860.
Attack - Iter-3000: Rec_loss-0.2804.
Attack - Iter-4000: Rec_loss-0.2775.
Attack - Iter-5000: Rec_loss-0.2740.
Attack - Iter-6000: Rec_loss-0.2713.
Attack - Iter-7000: Rec_loss-0.2711.
Attack - Iter-8000: Rec_loss-0.2731.
Attack - Iter-9000: Rec_loss-0.2746.
Attack - Iter-9999: Rec_loss-0.2709.
PSNR 10.6944 SSIM 0.1140 LPIPS -0.0000
Tuesday, 29. October 2024 08:27PM
Finished computations with time: 0:03:37.745302
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=4000, lr=0.01, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=30.0, layer_num=32, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([93])
Proxy_labels: tensor([45])
Initial with cifar100
torch.Size([100, 1152]) torch.Size([1152])
0
torch.Size([32, 3, 3, 3])
1
torch.Size([32])
2
torch.Size([32])
3
torch.Size([32])
4
torch.Size([64, 32, 3, 3])
5
torch.Size([64])
6
torch.Size([64])
7
torch.Size([64])
8
torch.Size([64, 64, 3, 3])
9
torch.Size([64])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([128, 64, 3, 3])
13
torch.Size([128])
14
torch.Size([128])
15
torch.Size([128])
16
torch.Size([128, 128, 3, 3])
17
torch.Size([128])
18
torch.Size([128])
19
torch.Size([128])
20
torch.Size([128, 128, 3, 3])
21
torch.Size([128])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128])
28
torch.Size([128, 128, 3, 3])
29
torch.Size([128])
30
torch.Size([128])
31
torch.Size([128])
32
torch.Size([100, 1152])
33
torch.Size([100])
34
Finished defence with time: 0:01:14.657403
Attack - Iter-0: Rec_loss-0.0059.
Attack - Iter-1000: Rec_loss-0.0034.
Attack - Iter-2000: Rec_loss-0.0017.
Attack - Iter-3000: Rec_loss-0.0017.
Attack - Iter-3999: Rec_loss-0.0017.
PSNR 19.7686 SSIM 0.5982 LPIPS -0.0000
Thursday, 21. November 2024 10:43AM
Finished computations with time: 0:01:43.956908
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=4000, lr=0.01, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=60.0, layer_num=32, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([93])
Proxy_labels: tensor([45])
Initial with cifar100
torch.Size([100, 1152]) torch.Size([1152])
0
torch.Size([32, 3, 3, 3])
1
torch.Size([32])
2
torch.Size([32])
3
torch.Size([32])
4
torch.Size([64, 32, 3, 3])
5
torch.Size([64])
6
torch.Size([64])
7
torch.Size([64])
8
torch.Size([64, 64, 3, 3])
9
torch.Size([64])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([128, 64, 3, 3])
13
torch.Size([128])
14
torch.Size([128])
15
torch.Size([128])
16
torch.Size([128, 128, 3, 3])
17
torch.Size([128])
18
torch.Size([128])
19
torch.Size([128])
20
torch.Size([128, 128, 3, 3])
21
torch.Size([128])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128])
28
torch.Size([128, 128, 3, 3])
29
torch.Size([128])
30
torch.Size([128])
31
torch.Size([128])
32
torch.Size([100, 1152])
33
torch.Size([100])
34
Finished defence with time: 0:01:14.173372
Attack - Iter-0: Rec_loss-0.0182.
Attack - Iter-1000: Rec_loss-0.0174.
Attack - Iter-2000: Rec_loss-0.0155.
Attack - Iter-3000: Rec_loss-0.0157.
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=4000, lr=0.01, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=90.0, layer_num=33, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([93])
Proxy_labels: tensor([45])
Initial with cifar100
torch.Size([100]) torch.Size([1152])
0
torch.Size([32, 3, 3, 3])
1
torch.Size([32])
2
torch.Size([32])
3
torch.Size([32])
4
torch.Size([64, 32, 3, 3])
5
torch.Size([64])
6
torch.Size([64])
7
torch.Size([64])
8
torch.Size([64, 64, 3, 3])
9
torch.Size([64])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([128, 64, 3, 3])
13
torch.Size([128])
14
torch.Size([128])
15
torch.Size([128])
16
torch.Size([128, 128, 3, 3])
17
torch.Size([128])
18
torch.Size([128])
19
torch.Size([128])
20
torch.Size([128, 128, 3, 3])
21
torch.Size([128])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128])
28
torch.Size([128, 128, 3, 3])
29
torch.Size([128])
30
torch.Size([128])
31
torch.Size([128])
32
torch.Size([100, 1152])
33
torch.Size([100])
34
Namespace(seed=42, output_dir='./logs', root='/home/lgd/Desktop/SNNFL/datasets', dataset='cifar100', num_workers=2, batch_size=1, num_sen=1, batch_idx=3, pretrained=False, demo=True, attack='gs', max_iter=4000, lr=0.01, lr_decay=True, tv=0.0001, boxed=False, imprint='no_sparse', bins=10, prior=-1, defense='soteria', percent_num=90.0, layer_num=32, perturb_imprint=False, noise_name='Gaussian', loc=0.0, scale=0.0001, per_adv=1, dcs_iter=300, dcs_lr=0.1, lambda_xsim=0.01, lambda_zsim=0.01, epsilon=0.01, early_stop=True, xsim_thr=150.0, lambda_y=0.7, project=True, startpoint='none', mixup=True, precode_size=256, beta=0.001, aug_list='21-13-3+7-4-15', method='iid', TotalDevNum=10, DevNum=5, n_data=64)
Currently evaluating -------------------------------:
CPUs: 24, GPUs: 1 on ubuntu.
GPU : NVIDIA GeForce RTX 4090
Total images 64 on cifar100
Defense soteria against Attack gs on Dataset cifar100.
Sensitive_labels: tensor([93])
Proxy_labels: tensor([45])
Initial with cifar100
torch.Size([100, 1152]) torch.Size([1152])
0
torch.Size([32, 3, 3, 3])
1
torch.Size([32])
2
torch.Size([32])
3
torch.Size([32])
4
torch.Size([64, 32, 3, 3])
5
torch.Size([64])
6
torch.Size([64])
7
torch.Size([64])
8
torch.Size([64, 64, 3, 3])
9
torch.Size([64])
10
torch.Size([64])
11
torch.Size([64])
12
torch.Size([128, 64, 3, 3])
13
torch.Size([128])
14
torch.Size([128])
15
torch.Size([128])
16
torch.Size([128, 128, 3, 3])
17
torch.Size([128])
18
torch.Size([128])
19
torch.Size([128])
20
torch.Size([128, 128, 3, 3])
21
torch.Size([128])
22
torch.Size([128])
23
torch.Size([128])
24
torch.Size([128, 128, 3, 3])
25
torch.Size([128])
26
torch.Size([128])
27
torch.Size([128])
28
torch.Size([128, 128, 3, 3])
29
torch.Size([128])
30
torch.Size([128])
31
torch.Size([128])
32
torch.Size([100, 1152])
33
torch.Size([100])
34
Finished defence with time: 0:01:15.139224
Attack - Iter-0: Rec_loss-0.0703.
Attack - Iter-1000: Rec_loss-0.0672.
Attack - Iter-2000: Rec_loss-0.0676.
Attack - Iter-3000: Rec_loss-0.0679.
Attack - Iter-3999: Rec_loss-0.0666.
PSNR 9.4316 SSIM 0.0996 LPIPS -0.0000
Thursday, 21. November 2024 10:49AM
Finished computations with time: 0:01:57.526284
